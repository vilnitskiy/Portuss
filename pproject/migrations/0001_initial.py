# -*- coding: utf-8 -*-
# Generated by Django 1.10.6 on 2017-06-04 21:05
from __future__ import unicode_literals

import datetime
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import pproject.validators


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Car',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('issue_date', models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(1950), django.core.validators.MaxValueValidator(2017)])),
                ('mileage', models.PositiveIntegerField(validators=[django.core.validators.MaxValueValidator(300)])),
                ('model', models.CharField(max_length=10)),
                ('photo', models.FileField(default=b'img/users_cars_photos/car.jpg', upload_to=b'img/users_cars_photos/')),
                ('price', models.PositiveIntegerField(default=200, validators=[pproject.validators.validate_price, django.core.validators.MinValueValidator(100), django.core.validators.MaxValueValidator(10000)])),
                ('description_title', models.TextField(blank=True, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('rental_perion_begin', models.DateField(default=datetime.datetime.now)),
                ('rental_perion_end', models.DateField(default=datetime.datetime.now)),
                ('country', models.CharField(max_length=100, null=True)),
                ('city', models.CharField(max_length=100, null=True)),
                ('street', models.CharField(max_length=100, null=True)),
                ('building', models.PositiveIntegerField(null=True)),
                ('docs', models.FileField(blank=True, null=True, upload_to=b'car_docs/')),
                ('is_insured', models.BooleanField(default=False)),
                ('times_rented', models.PositiveIntegerField(blank=True, default=0)),
                ('car_rating', models.PositiveIntegerField(default=3, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
            ],
        ),
        migrations.CreateModel(
            name='CarType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('_car', models.CharField(max_length=30)),
            ],
        ),
        migrations.CreateModel(
            name='CommentCar',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comment_body', models.TextField(default=b'comment')),
                ('comment_date', models.DateField(default=datetime.datetime.now)),
                ('is_interesting', models.PositiveIntegerField(blank=True, default=0)),
                ('unauthed_user_email', models.EmailField(blank=True, max_length=254, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='CommentCarOwner',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comment_body', models.TextField(blank=True, null=True)),
                ('comment_date', models.DateField(default=datetime.datetime.now)),
                ('is_interesting', models.PositiveIntegerField(blank=True, default=0)),
            ],
        ),
        migrations.CreateModel(
            name='CommonUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_of_birth', models.DateField(null=True, validators=[pproject.validators.validate_date_of_birth])),
                ('city', models.CharField(blank=True, max_length=60, null=True)),
                ('phone', models.IntegerField(blank=True, null=True)),
                ('vk', models.CharField(blank=True, max_length=60, null=True)),
                ('fb', models.CharField(blank=True, max_length=60, null=True)),
                ('about', models.TextField(blank=True, null=True)),
                ('photo', models.ImageField(default=b'img/users_avatars/default.jpg', upload_to=b'img/users_avatars/')),
                ('docs_are_checked', models.BooleanField(default=False)),
                ('soc_networks_are_checked', models.BooleanField(default=False)),
                ('comment', models.TextField(blank=True, null=True)),
                ('user_rating', models.PositiveIntegerField(default=3, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ConditionType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('_condition', models.CharField(max_length=30)),
            ],
        ),
        migrations.CreateModel(
            name='FuelType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('_fuel', models.CharField(max_length=30)),
            ],
        ),
        migrations.CreateModel(
            name='TrasmissionType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('_transmission', models.CharField(max_length=30)),
            ],
        ),
        migrations.AddField(
            model_name='commentcarowner',
            name='comment_author',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comment_author', to='pproject.CommonUser'),
        ),
        migrations.AddField(
            model_name='commentcarowner',
            name='commented_user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='commented_user', to='pproject.CommonUser'),
        ),
        migrations.AddField(
            model_name='commentcar',
            name='comment_author',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='comment_car_author', to='pproject.CommonUser'),
        ),
        migrations.AddField(
            model_name='commentcar',
            name='commented_car',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='commented_car', to='pproject.Car'),
        ),
        migrations.AddField(
            model_name='car',
            name='car_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='pproject.CarType'),
        ),
        migrations.AddField(
            model_name='car',
            name='condition',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='pproject.ConditionType'),
        ),
        migrations.AddField(
            model_name='car',
            name='fuel',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='pproject.FuelType'),
        ),
        migrations.AddField(
            model_name='car',
            name='owner',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='user_own_cars', to='pproject.CommonUser'),
        ),
        migrations.AddField(
            model_name='car',
            name='renter',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='user_rent_cars', to='pproject.CommonUser'),
        ),
        migrations.AddField(
            model_name='car',
            name='transmission',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='pproject.TrasmissionType'),
        ),
    ]
